define("aiplacement_callextensions/placement",["exports","core/copy_to_clipboard","core/notification","core/str","core_form/modalform","core/modal_delete_cancel","./repository","core/modal_events","core/templates"],(function(_exports,_copy_to_clipboard,_notification,_str,_modalform,_modal_delete_cancel,_repository,_modal_events,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_notification=_interopRequireDefault(_notification),_modalform=_interopRequireDefault(_modalform),_modal_delete_cancel=_interopRequireDefault(_modal_delete_cancel),_repository=_interopRequireDefault(_repository),_modal_events=_interopRequireDefault(_modal_events),_templates=_interopRequireDefault(_templates);var _default=class{constructor(actionButtonSelector){_defineProperty(this,"contextId",void 0),_defineProperty(this,"currentAction",void 0),_defineProperty(this,"progressInterval",void 0),this.actionButton=document.querySelector(actionButtonSelector),this.actionButton&&(this.contextId=this.actionButton.dataset.contextid?parseInt(this.actionButton.dataset.contextid,10):0,this.registerEventListeners())}registerEventListeners(){this.actionButton&&this.actionButton.addEventListener("click",(async event=>{event.preventDefault();const isActive=await _repository.default.getActiveAction(this.contextId,0);isActive&&!isActive.actionid?this.handleLaunchAction():this.handleActionProgress(isActive.actionid)}))}async handleLaunchAction(){const actionName=await(0,_str.getString)("action:".concat(this.actionButton.dataset.actionName),"aiplacement_callextensions"),dialogTitle=await(0,_str.getString)("actiondialog:title","aiplacement_callextensions",actionName),form=new _modalform.default({modalConfig:{title:dialogTitle},formClass:"aiplacement_callextensions\\form\\mod_assist_action_form",args:{component:this.actionButton.dataset.component,cmid:this.actionButton.dataset.cmid,actionname:this.actionButton.dataset.actionName},saveButtonText:await(0,_str.getString)("submit")});form.addEventListener(form.events.FORM_SUBMITTED,(event=>{event.detail.result?(form.hide(),window.location.reload()):_notification.default.addNotification({type:"info",message:event.detail.message})})),form.show()}async handleActionProgress(actionId){const actionName=await(0,_str.getString)("action:".concat(this.actionButton.dataset.actionName),"aiplacement_callextensions"),modal=await _modal_delete_cancel.default.create({title:(0,_str.getString)("actiondialog:status","aiplacement_callextensions",actionName),large:!0}),updateBody=(modal,actionId)=>_repository.default.actionStatus(actionId).then((async action=>{if(action&&3!==action.status)if(1===action.status||2===action.status)modal.hide(),modal.destroy(),_notification.default.addNotification({type:"failure",message:await(0,_str.getString)("actiondialog:statuscheckfailure","aiplacement_callextensions")}),clearInterval(this.progressInterval);else{const content=_templates.default.renderForPromise("aiplacement_callextensions/progress",action);modal.setBodyContent(content)}else modal.hide(),modal.destroy(),_notification.default.addNotification({type:"failure",message:await(0,_str.getString)("actiondialog:statuscheckfailure","aiplacement_callextensions")}),clearInterval(this.progressInterval)})).catch(_notification.default.exception);modal.getRoot().on(_modal_events.default.delete,(()=>{clearInterval(this.progressInterval),_repository.default.cancelAction(actionId).then((async()=>{modal.hide(),modal.destroy(),_notification.default.addNotification({type:"success",message:await(0,_str.getString)("actiondialog:cancelled","aiplacement_callextensions",actionName)})})).catch(_notification.default.exception)})),modal.setDeleteButtonText(await(0,_str.getString)("actiondialog:cancel","aiplacement_callextensions")),await updateBody(modal,actionId);this.progressInterval=setInterval((()=>updateBody(modal,actionId).then((shouldContinue=>!shouldContinue&&clearInterval(this.progressInterval)))),5e3),modal.show()}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=placement.min.js.map